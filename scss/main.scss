/*
Разбиваем наш файл style.css на файлы .scss, разделяя стили по папочкам и по отдельным файлам и подключаем файлы через main.scss.
К примеру подключили файл _base.scss через import. Обязательно перед названием этих файлов добавляем _ (нижнее подчеркивание).
Желательно делать импорты в алфавитном порядке подключаемых файлов (это можно сделать в конце или оставить как есть)
Шрифты, пременные и базовые стили всегда должны быть подключенные в начале для лучшей загрузки.
*/

@import './utils/fonts';
@import './utils/variables';
@import './base'; 
@import './utils/utils';

@import './components/buttons';
@import './components/header';
@import './components/hero-section';
@import './components/links';
@import './utils/mixin';



/* 
Минификация кода css
Что бы наш сайт быстрее загружался необходимо сжать все строчки файла scc в одну строку.
 Для этого нужно в Live Sass Compiled во вкладку Settings, Settings: Formats, выбрать Edit Settings.json
 В этом файле в строке изменить значения в следующих строчках: 
    "format": "compressed",
    "extensionName": ".min.css", в файле добавится префикс .min Разработчикам будет понятно что в этом файле минификованные стили
    "savePath": "/css/" * //Путь к дериктории, где будет формироваться скомпелированный файл .css*
*/

/* 

для такого упрощеного задания ширины,
высоты и цвета используется Директива mixin

.circle {
 @include circle(100px, 100px, white);
} для такого упрощеного задания ширины, высоты и цвета используется mixin

.circle-big {
@include circle(200px, 200px, green);
}
*/

.section {
    padding: 48px 0;
}

.container {
    /*указали ширину контейнера 100 процентов но не шире самого макета, который составляет 1240 пикселей.
    Также указали автоматический отступ по краям, а вертикальный отступ 0 пикселей*/
    width: 100%;
    max-width: 1288px;
    margin: 0 auto;
    padding: 0 24px;
}

a {
    display: inline-block;
    /*ко всем ссылкам лучше указывать это свойство*/
}



/*advantages section*/
.advantages-section {
    padding: 16px 0;
    background-color: var(--color-brand-normal);
}

.advantages-list {
    display: flex;
    justify-content: space-between;
    gap: 40px;
}

.advantages-item {
    font-size: 20px;
    font-weight: 300;
    color: var(--color-primary-light);
}

.section-title {
    font-size: 64px;
    font-weight: 900;
    line-height: 1.3;
}

.section-title .accent {
    color: var(--color-brand-dark);
}

.section-title.centered {
    text-align: center;
}

/*Tradition section*/
.tradition-section {
    padding-top: 96px;
}

.tradition-container {
    display: flex;
    justify-content: space-between;
    gap: 40px;
}

.tradition-content {
    max-width: 710px;
}

.tradition-title {
    margin-bottom: 42px;
}

.tradition-text .brand {
    color: var(--color-brand-normal);
    font-weight: 600;

}

.tradition-text .uppercase {
    text-transform: uppercase;
}

.tradition-text.limited {
    max-width: 340px;
}

/*Chef section*/

.chefs-title {
    position: relative;
    max-width: 520px;
    margin: 0 auto 80px;
}

.chefs-title::before,
.chefs-title:after {
    display: block;
    width: 352px;
    position: absolute;
    bottom: 24px;
    border: 2px solid var(--color-brand-light);
    content: '';
    /*без свойства content встраивание псевдоелемента не будет*/
}

.chefs-title::before {
    left: -360px;
}

.chefs-title::after {
    right: -360px;

}

.chef-title {
    margin-bottom: 16px;
    font-size: 40px;
    font-weight: 600;
}

.chefs-list {
    display: flex;
    gap: 40px 30px;
    flex-wrap: wrap;
}

.chefs-item {
    flex-basis: calc((100% - 30px) / 2);

}

.chef-card {
    display: flex;
    gap: 30px;
}

.chef-photo {
    border-radius: 4px 4px 4px 200px;
    box-shadow: -16px 16px 0 0 var(--color-primary-light), -16px 16px 0 2px var(--color-secondary-dark);
}

.chef-text p {
    margin-bottom: 24px;
}

.chef-text p:last-child {
    margin-bottom: 0;
}

/*.chef-text p и .chef-text p:last-child можно заменить одной надписью,
тоесть у всех будет margin-bottom: 24px кроме последнего абзаца (но браузер может добавить свой margin к последнему элементу,
так что лучше и для последнего элемента прописать значение )
.chef-text p:not(:last-child) {
    margin-bottom: 24px;
}
*/

/*format section*/
.formats-container {
    display: flex;
    align-items: center;
    gap: 32px;
}

.formats-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

.formats-item {
    flex-basis: calc((100% - 40px) / 3);
}

.format-card {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    height: 444px;
    padding: 24px;
    background-image: linear-gradient(180deg,
            rgba(49, 38, 26, 0) 55.21%,
            rgba(49, 38, 26, 0.71) 72.92%,
            var(--color-primary-dark) 100%);
    border-radius: 16px;
    transition: transform 0.05s;
}

.format-card:hover {
    transform: scale(1.05);
}

.format-image {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
}

.formats-title {
    margin-bottom: 80px;
}

.format-title {
    font-size: 24px;
    font-weight: 600;
    color: var(--color-primary-light);
}

.format-text {
    font-size: 14px;
    font-weight: 300;
    color: var(--color-primary-light);
}

.carousel-button {
    display: flex;
    flex-shrink: 0;
    /*flex-shrink свойство CSS, которое определяет фактор сжатия flex-элемента
    если браузер что-то сжимает, то мы можем отменить сжатие*/
    align-items: center;
    /*выравнивание по высоте*/
    justify-content: center;
    /*выравнивание по горизонтали*/
    width: 44px;
    height: 44px;
    padding: 0;
    background-color: transparent;
    border-radius: 50%;
    border: 1px solid var(--color-primary-dark);
    cursor: pointer;
}

.carousel-button:hover {
    background-color: var(--color-primary-dark);
}

.carousel-button.next {
    transform: rotate(180deg);
}

.carousel-arrow {
    width: 16px;
    height: 16px;
    fill: var(--color-primary-dark);
}

.carousel-button:hover .carousel-arrow {
    fill: var(--color-primary-light);
}

/*contact section*/
.contact-section {
    padding-bottom: 96px;
}

.contact-container {
    display: flex;
    gap: 32px;

}

.contact-map {
    flex-shrink: 0;
    border: none;
    border-radius: 16px;
}

.contact-title {
    margin-bottom: 16px;
}

/*Footer*/
.footer {
    position: relative;
    background-color: var(--color-primary-dark);
    background-image: url(../images/footer-background.png);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    padding: 32px 0;
    /*padding всегда делаем вверху (тоесть в основной секции)*/
}

.footer::before,
.footer::after {
    position: absolute;
    background-repeat: no-repeat;
    bottom: 0;
    content: '';
}

.footer::before {

    background-image: url(../images/decor-brad-small.png);
    width: 180px;
    height: 120px;
}

.footer::after {
    background-image: url(../images/decor-brad-big.png);
    width: 380px;
    height: 190px;
    right: 0;
}

.footer-container {
    display: flex;
    gap: 20px;
}

.footer-nav,
.footer-address {
    display: flex;
    flex-basis: 50%;
    gap: 20px;
}

.footer-logo,
.footer-menu {
    flex-grow: 1;
    /* вместо flex-grow: 1; можно использовать flex-basis: 50%; будет означать что элемент будет использовать 50% контейнера*/
    margin: 0 auto;
}

.address-list,
.address-info {
    flex-grow: 1;
    margin: 0 auto;
}

.address-link {
    color: var(--color-primary-light);
    font-size: 16px;
    font-weight: 300;
    text-decoration: none;
}

.address-link:hover {
    color: var(--color-brand-normal);
}

.addres-social {

    width: 32px;
    height: 32px;
    fill: var(--color-primary-light);
    /*именно с помошью fill задается цвет иконкам, а не с помошью color, так сказать это заливка*/
}

.addres-social:hover {
    fill: var(--color-brand-normal);
}

.address-copyright {
    font-size: 14px;
    font-weight: 400;
    color: var(--color-primary-light);
}

/*Modal window*/
.backdrop {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 20px 0;
    transition: opacity 0.5s, visibility 0.5s;
}

.backdrop.is-hidden {
    /*display: none; - можна задь этот парамет или то что ниже*/
    opacity: 0;
    display: hidden;
    pointer-events: none;
}

.modal {
    position: relative;
    height: 100%;
    max-height: 880px;
    width: 100%;
    max-width: 880px;
    background-color: var(--color-primary-light);
    border-radius: 32px;
    padding: 128px;
    overflow-y: auto;
}

.modal-btn-close {
    position: absolute;
    top: 40px;
    right: 40px;
}

/* Form */
.form-field {
    margin-bottom: 32px;
}

.form-label {
    display: block;
}

.form-input {
    padding: 16px 42px;
    width: 100%;
    border: 1px solid var(--color-secondary-dark);
    border-radius: 8px;
    background-color: transparent;
    font-size: 16px;
    line-height: 1.17;
}

.form-input:focus {
    border-color: var(--color-brand-normal);
    outline: none;
}

/* .form-input:disabled { 
    border-color: lightgray;

}*/

.form-input::placeholder {
    color: var(--color-secondary-dark);
    font-size: 16px;
    line-height: 1.17;
}

/* .form-input:disabled::placeholder {
    color: lightgray;
}*/

.form-input:focus::placeholder {
    color: var(--color-primary-dark)
}

.form-button {
    display: block;
    margin: 0 auto;
    margin: 0 auto 24px;
}

.form-terms {
    margin: 0 auto;
    max-width: 220px;
    font-weight: 500;
    font-size: 12px;
    line-height: 1.5;
    text-align: center;
}

.form-term-link {
    color: var(--color-primary-dark);
    text-underline-offset: 2px;
}

/* .checkbox {
    position: relative;
}

.checkbox-input {
    appearance: none;
}

.checkbox-input:checked + .checkbox-label::before {
    background-color: var(--color-brand-dark);
}

.checkbox-label {
    padding-left: 24px;
}

.checkbox-label::before {
    position: absolute;
    top: 0;
    left: 0;
    margin-top: 5px;
    width: 16px;
    height: 16px;
    border: 1px solid var(--color-brand-dark);
    border-radius: 3px;
    content: '';
} */